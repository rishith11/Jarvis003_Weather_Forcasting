{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "weatherforecast.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "zJng3UcaBvsG"
      },
      "source": [
        "import numpy as np  # linear algebra\n",
        "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
        "import matplotlib.pyplot as plt  #generating graphs"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 695
        },
        "id": "qIPH-14hB-iS",
        "outputId": "a2c9b5a4-5091-49f0-b481-97537dd98735"
      },
      "source": [
        "#Importing DataSet \n",
        "dataset = pd.read_csv(\"./weather.csv\")\n",
        "dataset.head(10)"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>temperaturemin</th>\n",
              "      <th>temperaturemax</th>\n",
              "      <th>tempavg</th>\n",
              "      <th>precipitation</th>\n",
              "      <th>snowfall</th>\n",
              "      <th>snowdepth</th>\n",
              "      <th>avgwindspeed</th>\n",
              "      <th>fastest2minwinddir</th>\n",
              "      <th>fastest2minwindspeed</th>\n",
              "      <th>fastest5secwinddir</th>\n",
              "      <th>fastest5secwindspeed</th>\n",
              "      <th>fog</th>\n",
              "      <th>fogheavy</th>\n",
              "      <th>mist</th>\n",
              "      <th>rain</th>\n",
              "      <th>fogground</th>\n",
              "      <th>ice</th>\n",
              "      <th>glaze</th>\n",
              "      <th>drizzle</th>\n",
              "      <th>snow</th>\n",
              "      <th>freezingrain</th>\n",
              "      <th>smokehaze</th>\n",
              "      <th>thunder</th>\n",
              "      <th>highwind</th>\n",
              "      <th>hail</th>\n",
              "      <th>blowingsnow</th>\n",
              "      <th>dust</th>\n",
              "      <th>freezingfog</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>02 13 2011</td>\n",
              "      <td>25.0</td>\n",
              "      <td>61.0</td>\n",
              "      <td>43.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>6.93</td>\n",
              "      <td>230.0</td>\n",
              "      <td>17.90</td>\n",
              "      <td>220.0</td>\n",
              "      <td>23.94</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>02 16 2011</td>\n",
              "      <td>34.0</td>\n",
              "      <td>63.0</td>\n",
              "      <td>48.50</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.37</td>\n",
              "      <td>230.0</td>\n",
              "      <td>17.90</td>\n",
              "      <td>230.0</td>\n",
              "      <td>21.92</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>02 18 2011</td>\n",
              "      <td>52.0</td>\n",
              "      <td>78.1</td>\n",
              "      <td>65.05</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10.74</td>\n",
              "      <td>230.0</td>\n",
              "      <td>17.90</td>\n",
              "      <td>280.0</td>\n",
              "      <td>23.04</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>03 3 2011</td>\n",
              "      <td>35.1</td>\n",
              "      <td>53.1</td>\n",
              "      <td>44.10</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10.74</td>\n",
              "      <td>70.0</td>\n",
              "      <td>21.03</td>\n",
              "      <td>80.0</td>\n",
              "      <td>29.08</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>03 16 2011</td>\n",
              "      <td>46.9</td>\n",
              "      <td>64.0</td>\n",
              "      <td>55.45</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.91</td>\n",
              "      <td>270.0</td>\n",
              "      <td>10.07</td>\n",
              "      <td>300.0</td>\n",
              "      <td>14.09</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>03 19 2011</td>\n",
              "      <td>55.9</td>\n",
              "      <td>75.0</td>\n",
              "      <td>65.45</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.82</td>\n",
              "      <td>40.0</td>\n",
              "      <td>17.90</td>\n",
              "      <td>50.0</td>\n",
              "      <td>25.05</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>03 21 2011</td>\n",
              "      <td>52.0</td>\n",
              "      <td>75.0</td>\n",
              "      <td>63.50</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.75</td>\n",
              "      <td>240.0</td>\n",
              "      <td>27.96</td>\n",
              "      <td>240.0</td>\n",
              "      <td>36.01</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>03 23 2011</td>\n",
              "      <td>50.0</td>\n",
              "      <td>82.9</td>\n",
              "      <td>66.45</td>\n",
              "      <td>0.45</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>6.71</td>\n",
              "      <td>230.0</td>\n",
              "      <td>25.95</td>\n",
              "      <td>220.0</td>\n",
              "      <td>36.01</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>03 30 2011</td>\n",
              "      <td>39.9</td>\n",
              "      <td>48.0</td>\n",
              "      <td>43.95</td>\n",
              "      <td>1.05</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7.83</td>\n",
              "      <td>100.0</td>\n",
              "      <td>21.92</td>\n",
              "      <td>100.0</td>\n",
              "      <td>29.08</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>04 1 2011</td>\n",
              "      <td>37.9</td>\n",
              "      <td>55.0</td>\n",
              "      <td>46.45</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>6.26</td>\n",
              "      <td>280.0</td>\n",
              "      <td>17.90</td>\n",
              "      <td>290.0</td>\n",
              "      <td>29.97</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         date  temperaturemin  temperaturemax  ...  blowingsnow  dust  freezingfog\n",
              "0  02 13 2011            25.0            61.0  ...           No    No           No\n",
              "1  02 16 2011            34.0            63.0  ...           No    No           No\n",
              "2  02 18 2011            52.0            78.1  ...           No    No           No\n",
              "3   03 3 2011            35.1            53.1  ...           No    No           No\n",
              "4  03 16 2011            46.9            64.0  ...           No    No           No\n",
              "5  03 19 2011            55.9            75.0  ...           No    No           No\n",
              "6  03 21 2011            52.0            75.0  ...           No    No           No\n",
              "7  03 23 2011            50.0            82.9  ...           No    No           No\n",
              "8  03 30 2011            39.9            48.0  ...           No    No           No\n",
              "9   04 1 2011            37.9            55.0  ...           No    No           No\n",
              "\n",
              "[10 rows x 29 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OCrttIk2SCn8"
      },
      "source": [
        "temp=dataset['tempavg']\n",
        "precipitation=dataset['precipitation']\n",
        "# precipitation means chances of rain,drizzle,snow,hail or something else"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x88E_j7MC-yq",
        "outputId": "1c6f5ffb-bd99-44e6-d33d-2ea4030a900b"
      },
      "source": [
        "x = np.array(temp).reshape(-1, 1)\n",
        "print(x) # function name says it : reshape the array\n",
        "y = np.array(precipitation)\n",
        "print(y)"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[43.  ]\n",
            " [48.5 ]\n",
            " [65.05]\n",
            " ...\n",
            " [47.45]\n",
            " [67.45]\n",
            " [63.5 ]]\n",
            "[0.   0.   0.   ... 0.06 0.04 0.  ]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jetgTSK9DrCP",
        "outputId": "03458613-8a7b-4a1e-9281-b390e25c43ea"
      },
      "source": [
        "#Splitting the data into Train and Test\n",
        "#from sklearn.cross_validation import train_test_split in earlier version\n",
        "from sklearn.model_selection import train_test_split \n",
        "xtrain, xtest, ytrain, ytest = train_test_split( x, y, test_size=1/3, random_state=0 )\n",
        "print(\"xtrain dataset is\")\n",
        "print(xtrain)\n",
        "print(\"xtest dataset is\")\n",
        "print(xtest)\n",
        "print(\"ytrain dataset is\")\n",
        "print(ytrain)\n",
        "print(\"ytest dataset is\")\n",
        "print(ytest)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "xtrain dataset is\n",
            "[[49.05]\n",
            " [69.  ]\n",
            " [71.5 ]\n",
            " ...\n",
            " [53.55]\n",
            " [45.5 ]\n",
            " [59.95]]\n",
            "xtest dataset is\n",
            "[[84.55]\n",
            " [80.05]\n",
            " [75.45]\n",
            " ...\n",
            " [73.6 ]\n",
            " [52.4 ]\n",
            " [78.1 ]]\n",
            "ytrain dataset is\n",
            "[0.   0.   0.03 ... 0.3  0.   0.  ]\n",
            "ytest dataset is\n",
            "[0.01 0.22 0.   ... 0.   0.   0.  ]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i9JsXw_nEfXv",
        "outputId": "75c61d54-dd64-4cb1-d36e-93100b40c253"
      },
      "source": [
        "#Fitting simple linear regression to the Training Set\n",
        "from sklearn.linear_model import LinearRegression \n",
        "linreg = LinearRegression()\n",
        "linreg.fit( xtrain, ytrain )"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JWCiFuNvEvso",
        "outputId": "bd67cee7-be61-4805-b928-1a86ecb61a46"
      },
      "source": [
        "print(linreg.coef_) \n",
        "print(linreg.intercept_)\n",
        "# y = mx + c , m is coef , c is intercept\n",
        "realVal = ytrain\n",
        "Valpredict = linreg.predict(xtrain) \n",
        "print(xtrain[0])\n",
        "print(realVal[0])\n",
        "print(Valpredict[0])"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.00150934]\n",
            "0.03592991304872621\n",
            "[49.05]\n",
            "0.0\n",
            "0.10996305489448213\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ksRyp3MrHhxp",
        "outputId": "67c8cbb8-89d5-4fa4-9526-48c4a85fd44d"
      },
      "source": [
        "print(linreg.coef_ * xtrain[0] + linreg.intercept_) # y = mx + c"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.10996305]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LThYfesRHk1l",
        "outputId": "abe79f9c-7e03-45ec-c3d9-594fe3a9ed5f"
      },
      "source": [
        "np.sqrt ( sum( abs( realVal**2 - Valpredict**2 ) ) ) / len( xtrain ) # RMSE\n",
        "# Root Mean Square Error"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.007198891979413631"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "E0ENhrgwHqSN",
        "outputId": "1783bf94-f995-415f-a579-910a1796c5b3"
      },
      "source": [
        "#Visualizing the training Test Results \n",
        "# Actual values\n",
        "plt.scatter(xtrain, ytrain, color='dodgerblue') # x = xtrain , y = ytrain\n",
        "\n",
        "#Predicted values\n",
        "prediction = linreg.predict(xtrain)\n",
        "plt.plot(xtrain, prediction , color = 'lime') # y = prediction\n",
        "\n",
        "plt.title (\"Prediction for dataset contains about training data\")\n",
        "plt.xlabel(\"Temperature specified degree\"), plt.ylabel(\"Precipitation found out\")\n",
        "plt.show()"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "2K7xA8OSHz8b",
        "outputId": "2bca606b-ed68-46d7-e4f1-257808706f1a"
      },
      "source": [
        "#Visualizing the Test Results \n",
        "\n",
        "plt.scatter(xtest, ytest, color= 'green')\n",
        "\n",
        "plt.plot(xtrain, linreg.predict(xtrain), color = 'black')\n",
        "\n",
        "plt.title (\"Training Dataset\")\n",
        "plt.xlabel(\"Tempertaure in degree\"), plt.ylabel(\"Precipitation\")\n",
        "plt.show()"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "id": "09vHnqSvH4yD",
        "outputId": "493a65a7-07a3-4738-94ec-d8fb1e609c0c"
      },
      "source": [
        "plt.title('fastest wind dir')\n",
        "dataset1=dataset.head(10)\n",
        "plt.plot(dataset1.date,dataset1.fastest2minwinddir,label='fast wind direction in 2min',marker='.')\n",
        "plt.plot(dataset1.date,dataset1.fastest5secwinddir,label='fast wind direction in 5sec',marker='.')\n",
        "plt.xticks(dataset1.date[::2])\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "615wqqTbfUKI"
      },
      "source": [
        "**By this we get to know that direction of wind remains almost same after certain time. So the effect of change in wind direction will not affect in weather changes**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "id": "aQtRVoTrdTt7",
        "outputId": "2fbdea9f-67f7-404e-e481-4f22efd1a718"
      },
      "source": [
        "plt.title('fastest wind dir')\n",
        "dataset1=dataset.head(10)\n",
        "plt.plot(dataset1.date,dataset1.fastest2minwindspeed,label='fast wind speed in 2min',marker='.')\n",
        "plt.plot(dataset1.date,dataset1.fastest5secwindspeed,label='fast wind speed in 5sec',marker='.')\n",
        "plt.xticks(dataset1.date[::2])\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xaRo8Ooqfr0M"
      },
      "source": [
        "**By this we get to know that wind speed will decrease after certain time while predicting the weather.So wind speed will only minorly affect in weather changes**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "2d1QefnagwzE",
        "outputId": "2ced32bd-bf91-42d0-fb5c-4733efb57add"
      },
      "source": [
        "data1 = pd.read_csv('./weather.csv')\n",
        "plt.hist(data1['tempavg'])\n",
        "plt.show()"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tcP69eA7E33b",
        "outputId": "85f93e96-feef-4f13-beaa-a6d0055c69f3"
      },
      "source": [
        "i1=pd.read_csv(\"./weather.csv\")#extracting all instances\n",
        "i=i1.head(10)\n",
        "a1=np.array(i.iloc[:,:-17])\n",
        "print(a1)\n",
        "target=np.array(i.iloc[:,-17])#extracting target function\n",
        "print(target)"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[['02 13 2011' 25.0 61.0 43.0 0.0 0.0 0.0 6.93 230.0 17.9 220.0 23.94]\n",
            " ['02 16 2011' 34.0 63.0 48.5 0.0 0.0 0.0 5.37 230.0 17.9 230.0 21.92]\n",
            " ['02 18 2011' 52.0 78.1 65.05 0.0 0.0 0.0 10.74 230.0 17.9 280.0 23.04]\n",
            " ['03 3 2011' 35.1 53.1 44.1 0.0 0.0 0.0 10.74 70.0 21.03 80.0 29.08]\n",
            " ['03 16 2011' 46.9 64.0 55.45 0.05 0.0 0.0 2.91 270.0 10.07 300.0 14.09]\n",
            " ['03 19 2011' 55.9 75.0 65.45 0.0 0.0 0.0 5.82 40.0 17.9 50.0 25.05]\n",
            " ['03 21 2011' 52.0 75.0 63.5 0.0 0.0 0.0 12.75 240.0 27.96 240.0 36.01]\n",
            " ['03 23 2011' 50.0 82.9 66.45 0.45 0.0 0.0 6.71 230.0 25.95 220.0 36.01]\n",
            " ['03 30 2011' 39.9 48.0 43.95 1.05 0.0 0.0 7.83 100.0 21.92 100.0 29.08]\n",
            " ['04 1 2011' 37.9 55.0 46.45 0.0 0.0 0.0 6.26 280.0 17.9 290.0 29.97]]\n",
            "['No' 'No' 'Yes' 'No' 'Yes' 'No' 'No' 'Yes' 'Yes' 'Yes']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T--tn6q2Aswq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1011e5cf-49b0-4c7f-ef24-7a1de9aae78a"
      },
      "source": [
        "for i,val in enumerate(target):\n",
        "  if(val==\"Yes\"):\n",
        "    h=a1[i].copy()\n",
        "  print(h)"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['04 9 2019' 61.0 73.9 67.45 0.04 0.0 0.0 5.82 250.0 12.08 240.0 16.11]\n",
            "['04 9 2019' 61.0 73.9 67.45 0.04 0.0 0.0 5.82 250.0 12.08 240.0 16.11]\n",
            "['02 18 2011' 52.0 78.1 65.05 0.0 0.0 0.0 10.74 230.0 17.9 280.0 23.04]\n",
            "['02 18 2011' 52.0 78.1 65.05 0.0 0.0 0.0 10.74 230.0 17.9 280.0 23.04]\n",
            "['03 16 2011' 46.9 64.0 55.45 0.05 0.0 0.0 2.91 270.0 10.07 300.0 14.09]\n",
            "['03 16 2011' 46.9 64.0 55.45 0.05 0.0 0.0 2.91 270.0 10.07 300.0 14.09]\n",
            "['03 16 2011' 46.9 64.0 55.45 0.05 0.0 0.0 2.91 270.0 10.07 300.0 14.09]\n",
            "['03 23 2011' 50.0 82.9 66.45 0.45 0.0 0.0 6.71 230.0 25.95 220.0 36.01]\n",
            "['03 30 2011' 39.9 48.0 43.95 1.05 0.0 0.0 7.83 100.0 21.92 100.0 29.08]\n",
            "['04 1 2011' 37.9 55.0 46.45 0.0 0.0 0.0 6.26 280.0 17.9 290.0 29.97]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XcGl_JMNHgXA"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}